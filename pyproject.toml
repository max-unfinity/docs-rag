[tool.poetry]
name = "docs-rag"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "docsrag"}]

[tool.poetry.dependencies]
python = ">=3.9,<3.9.7 || >3.9.7,<4.0"
langchain = "^0.1.1"
langchainhub = "^0.1.14"
langchain-benchmarks = "^0.0.10"
langsmith = "^0.0.83"
openai = "^1.9.0"
tiktoken = "^0.5.2"
chromadb = "^0.4.22"
bs4 = "^0.0.2"
pandas = "^2.2.0"
pyarrow = "^15.0.0"
langchain-community = "^0.0.14"
sentence-transformers = "^2.2.2"
langchain-openai = "^0.0.3"
streamlit = "^1.30.0"
pysqlite3-binary = "^0.5.2.post3"


[tool.poetry.group.dev.dependencies]
ruff = "^0.1.14"
black = "^23.12.1"
isort = "^5.13.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120

select = ["A", "ANN", "B", "E", "F", "N", "Q", "W", "S", "I"]
# Not supported: 
#   - flake8-annotations-complexity
#   - flake8-import-order (could be replaced with isort)
#   - flake8-mutable (bugbear has B006 for that)
#   - flake8-use-fstring (Pyflakes has F541 for that)
#   - flake8-cognitive-complexity (is mccabe C901 not enough?)
#   - flake8-variables-names (VNE)
#   - radon (is it really necessary?)

ignore = [
    "Q000",

    "ANN002",  # Missing type annotation for *args
    "ANN003",  # Missing type annotation for **kwargs
    "ANN101",  # Missing type annotation for self in method
    "ANN102",  # Missing type annotation for cls in classmethod
    "ANN204",  # Missing return type annotation for special method
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed

    "N818",  # All exceptions should be named with Error* prefix

    "C417", # Recommendation to use a generator expression instead of map/lambda function
    "E722", # Bare except

    "W505", # noqa comment
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "ANN", "B", "E", "F", "N", "Q", "W", "S", "I"]
unfixable = ["F841"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__pycache__",
    "*.md",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.pydocstyle]
convention = "google"

[tool.isort]
src_paths = ["docsrag"]
line_length = 120
multi_line_output = 5